{
	"info": {
		"_postman_id": "c4bd4c1f-5977-49aa-b21b-968035d72863",
		"name": "Hello World",
		"description": "A simple collection with one request that has tests to validate response. You can use this collection as a entry-levle example to demonstrate Postman's debugging capabilities.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Hello World",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.be.success;",
							"});",
							"",
							"pm.test(\"Ensure `data` property exists and contains `message`\", function () {",
							"    pm.response.to.have.jsonSchema({",
							"        properties: {",
							"            data: {",
							"                type: \"object\",",
							"                properties: {",
							"                    message: {",
							"                        type: \"string\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    });",
							"});",
							"",
							"pm.test(\"Ensure valid message\", function () {",
							"    pm.expect(jsonData.data.message).to.contain('Hello,');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"message\": \"Hello, {{login}}! \" \n}"
				},
				"url": {
					"raw": "https://postman-echo.com/post",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Checking Duplicates",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"A user already exists with this email.\");",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "authority",
						"value": "{{link}}"
					},
					{
						"key": "accept",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "accept-language",
						"value": "en-GB,en-US;q=0.9,en;q=0.8"
					},
					{
						"key": "content-type",
						"value": "application/json;charset=UTF-8"
					},
					{
						"key": "origin",
						"value": "https://{{link}}"
					},
					{
						"key": "referer",
						"value": "https://{{link}}"
					},
					{
						"key": "sec-ch-ua",
						"value": "\".Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"103\", \"Chromium\";v=\"103\""
					},
					{
						"key": "sec-ch-ua-mobile",
						"value": "?0"
					},
					{
						"key": "sec-ch-ua-platform",
						"value": "\"macOS\""
					},
					{
						"key": "sec-fetch-dest",
						"value": "empty"
					},
					{
						"key": "sec-fetch-mode",
						"value": "cors"
					},
					{
						"key": "sec-fetch-site",
						"value": "same-site"
					},
					{
						"key": "user-agent",
						"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"query\": \"mutation signup($data:SignupInputType!){signup(data:$data){hasError userErrors message data}}\",\n    \"variables\": {\n        \"data\": {\n            \"email\": \"{{login}}\",\n            \"password\": \"{{password}}\",\n            \"depositor_platform\": \"NONE\"\n        }\n    }\n}"
				},
				"url": {
					"raw": "https://{{link}}/api/open",
					"protocol": "https",
					"host": [
						"{{link}}"
					],
					"path": [
						"api",
						"open"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}